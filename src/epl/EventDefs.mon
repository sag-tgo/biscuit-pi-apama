/*
 * Copyright (c) 2020 Software AG, Darmstadt, Germany and/or its licensors
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */
package com.softwareag.apama.eplclub;

event InvokeBrickPiAction {
    constant string CHANNEL := "Invoke_BP_Action";
    string methodName;
    sequence<any> params;
    string responseChannel;
}

event BrickPiActionResult {
    any value;
}

event ReadColorSensor {
    constant string CHANNEL := "ColorSensor";
}

event StartPollingLimitSensor {
    float intervalSecs;
    string destChannel;
}

event StartPollingGyroSensor {
    float intervalSecs;
    string destChannel;
}

event StartPollingColorSensor {
    float intervalSecs;
    string destChannel;
}

event StopPollingLimitSensor {
}

event StopPollingGyroSensor {
}

event StopPollingColorSensor {
}

event Config {
    constant string SUBSCRIBE_CHANNEL := "CONFIG";

    integer COLOR_SENSOR_PORT; // For sensing colour of biscuits.
    integer GYRO_SENSOR_PORT; // Gyro sensor on robot arm - could use to control height.
    integer LIMIT_SENSOR_PORT; // Arm rotation limit touch sensor.

    integer VERTICAL_MOTOR_PORT; // Port for the motor controlling veritcal movement of the arm.
    integer ROTATE_MOTOR_PORT; // Port for the motor controlling rotation of the arm.
    integer GRABBER_MOTOR_PORT; // Port for the motor controlling the grabber.
}
